<br/>=For example, <code>invalid('Incorrect parameter')</code> corresponds to the message sent in case of an invalid parameter for the report execution.
IDX_REPORT_GROUP_UNIQ_TITLE=使用相同名稱的報表組已經存在
IDX_REPORT_REPORT_UNIQ_NAME=使用相同名稱的報表已經存在
actions.Report=報表
actions.printAll=打印全部
actions.printSelected=打印選中
bandDefinitionEditor=區域編輯器
button.import=導入
button.run=執行
caption.category=分類
caption.preview=預覽
chartEdit.series=系列
chartEdit.seriesEmptyMsg=請指定系列
chartEdit.seriesTypeNullMsg=請指定系列類型
chartEdit.seriesValueFieldNullMsg=請執行系列值字段
copy=拷貝
crossFieldValidationScriptHelp=這裏可以設置一個Groovy腳本，用來在報表執行之前對報表參數進行交叉檢查。<br/> <code>invalid (String str)</ code> 方法可以給用戶發送關於驗證的錯誤信息。<br/> 腳本應當檢查參數之間的關聯是否有意義，如果沒有意義可以調 "invalid()" 方法。<br/><br/> 比如，<code>invalid('開始時間應該在結束時間之前')</code> 會在"Start date”參數發生在"End date”參數之後發出錯誤消息。<br/>以下變量傳遞到腳本中：<ul><li><code>params</code> - 外部報表參數映射</li><li><code>dataManager</code> - <code>DataManager</code> 類型的對象，提供CRUD功能。</li><li><code>metadata</code> - <code>Metadata</code> 類型的對象，提供訪問應用程序元數據的功能。</li><li><code>security</code> - <code>Security</code> 類型的對象，用來檢查用戶訪問不同系統對象的權限</li><li><code>userSession</code> - <code>UserSession</code> 類型的對象，關聯當前認證用戶</li><li><code>invalid</code> - groovy 閉包，如果在腳本內調用的話，能很有效的檢測驗證失敗。<ul>
dataSet.cantFindCollectionProperty=找不到 %s 集合屬性，父實體：%s
dataSet.dataStore=數據存儲
dataSet.dataStoreMain=主存儲
dataSet.editView=選擇實體屬性
dataSet.entitiesParamName=實體參數名稱列表
dataSet.entityAliasInvalid=名稱爲 [%s] 的參數不正確
dataSet.entityAliasNull=參數爲空
dataSet.entityParamName=實體參數名稱
dataSet.entityWasChanged=實體有改動。現在您在編輯一個新實體的屬性 %s
dataSet.jsonParameter=參數
dataSet.jsonPathQuery=JSON路徑查詢語句
dataSet.jsonPathQueryHelp=這裏可以設置JSON路徑查詢語句用來查詢JSON數。<p>示例：</p>有如下JSON結構，使用這個查詢可以選擇所有的書：<strong>$.store.book[*]</strong><br><code>{<br>&nbsp "store": {<br>&nbsp &nbsp "book": [<br>&nbsp &nbsp &nbsp {<br>&nbsp &nbsp &nbsp &nbsp "category": "reference",<br>&nbsp &nbsp &nbsp &nbsp "author": "Nigel Rees",<br>&nbsp &nbsp &nbsp &nbsp "title": "Sayings of the Century",<br>&nbsp &nbsp &nbsp &nbsp "price": 8.95<br>&nbsp &nbsp &nbsp },<br>&nbsp &nbsp &nbsp {<br>&nbsp &nbsp &nbsp &nbsp "category": "fiction",<br>&nbsp &nbsp &nbsp &nbsp "author": "Evelyn Waugh",<br>&nbsp &nbsp &nbsp &nbsp "title": "Sword of Honour",<br>&nbsp &nbsp &nbsp &nbsp "price": 12.99,<br>&nbsp &nbsp &nbsp &nbsp "isbn": "0-553-21311-3"<br>&nbsp &nbsp &nbsp }<br>&nbsp &nbsp ],<br>&nbsp &nbsp "bicycle": {<br>&nbsp &nbsp &nbsp "color": "red",<br>&nbsp &nbsp &nbsp "price": 19.95<br>&nbsp &nbsp }<br>&nbsp }<br>}<br></code><br>更多成熟的示例，請參考JSON路徑文檔。
dataSet.jsonPathQueryText=JSON路徑查詢語句必填
dataSet.jsonSourceGroovyCodeHelp=這裏可以設置一個Groovy腳本，用來返回包含JSON的字符串。以下參數傳入腳本：<ul><li><code>params</code> - 外部報表參數映射</li><li><code>parentBand</code> - 父區域，<code>BandData</code> 類型的對象</li><li><code>persistence</code> -<code>Persistence</code> 類型的對象，提供對數據存儲的訪問。</li><li><code>dataManager</code> - <code>DataManager</code> 類型的對象，提供CRUD功能。</li><li><code>metadata</code> - <code>Metadata</code> 類型的對象，提供訪問應用程序元數據的功能。</li><li><code>security</code> - <code>Security</code> 類型的對象，用來檢查用戶訪問不同系統對象的權限</li><li><code>userSession</code> - <code>UserSession</code> 類型的對象，關聯當前認證用戶</li><li><code>userSessionSource</code> - <code>UserSessionSource</code> 類型的對象，用來獲取當前用戶會話對象</li><li><code>timeSource</code> - <code>TimeSource</code> 類型的對象，用來獲取當前時間</li><li><code>transactional</code> - 接收一個閉包作爲參數的方法，這個閉包需要在新事務中作爲參數執行。當前 <code>EntityManager</code> 作爲閉包的參數用來處理事務</li><ul>
dataSet.jsonSourceType=JSON源
dataSet.linkParameterName=關聯字段
dataSet.name=數據集名稱
dataSet.processTemplate=預處理查詢語句作爲Groovy模板
dataSet.text=腳本
dataSet.textHelp=這裏可以設置一個Groovy腳本，用來生產數據集。 以下參數傳入腳本：<ul><li><code>params</code> -  外部報表參數映射</li><li><code>parentBand</code> -  父區域，<code>BandData</code> 類型的對象</li><li><code>Persistence</code> 類型的對象，提供對數據存儲的訪問。</li><li><code>dataManager</code> - <code>DataManager</code> 類型的對象，提供CRUD功能。</li><li><code>metadata</code> - <code>Metadata</code> 類型的對象，提供訪問應用程序元數據的功能。</li><li><code>security</code> - <code>Security</code> 類型的對象，用來檢查用戶訪問不同系統對象的權限</li><li><code>userSession</code> - <code>UserSession</code> 類型的對象，關聯當前認證用戶</li><li><code>userSessionSource</code> - <code>UserSessionSource</code> 類型的對象，用來獲取當前用戶會話對象</li><li><code>timeSource</code> - <code>TimeSource</code> 類型的對象，用來獲取當前時間</li><li><code>transactional</code> - 接收一個閉包作爲參數的方法，這個閉包需要在新事務中作爲參數執行。當前 <code>EntityManager</code> 作爲閉包的參數用來處理事務</li><ul>
dataSet.type=數據集類型
dataSet.urlJsonSource=URL
dataSet.urlJsonSourceMessage=URL必填
dataSet.useExistingView=使用已有視圖
dataSet.viewName=視圖名稱
definition.name=區域名稱
definition.orientation=方向
definition.parentBand=父區域
description.createBand=創建區域
description.createDataSet=創建數據集
description.createTemplate=創建模板
description.downloadTemplate=下載模板
description.editTemplate=編輯模板
description.moveDown=向下移動
description.moveUp=向上移動
description.removeBand=移除區域
description.removeDataSet=移除數據集
description.uploadTemplate=更新模板
error.bandNameNull=區域名未設置
error.bandNamesDuplicated=區域名重複 [%s]
error.bandOrientationNull=區域的 [%s] 方向未設置
error.dataSetNameNull=數據集名稱未設置
error.dataSetScriptNull=數據集的 [%s] 腳本爲空
error.dataSetTypeNull=數據集的 [%s] 類型未設置
error.jsonDataSetScriptNull=JSON數據集的 [%s] 腳本爲空
error.rootBandNull=根區域未設置
export=導出
fileUploadDialog.caption=正在發送文件
formatStringMsg=格式字符串未指定
formatsEdit=格式化工具
generalFrame.createBandDefinition=創建區域
generalFrame.down=下
generalFrame.removeBandDefinition=移除區域
generalFrame.up=上
generalTab=報表結構
groupLocaleCaption=本地化
groupProperties=分組
inputOutputTypesError=模板類型和輸出類型不匹配
inputParameters=輸入實體參數
localeCaption=本地化名稱
localeText=本地化
localesTab=本地化
menu-config.report$Report.browse=報表
menu-config.report$Report.run=運行報表
menu-config.report$ReportGroup.browse=報表分組
menu-config.report$showChart=顯示圖表
menu-config.report$showPivotTable=顯示透視表
menu-config.report$showReportTable=顯示錶格
menu-config.reports=報表
notification.defaultTemplateIsEmpty=默認模板未指定
notification.fileIsNotAllowedForChart=無法爲圖表保存模板
notification.selectReport=請選擇報表
notifications.confirmPrintAll=確認是否要打印所有數據？
notifications.confirmPrintAllheader=確認
notifications.confirmPrintSelected=報表要使用什麼數據？
notifications.confirmPrintSelectedheader=選擇
notifications.noSelectedEntity=未選擇數據
parameter.localeTextHelp=這裏可以爲不同地區定義不同參數名稱。爲了做到這個<br/>需要成對輸入地區名稱：<code>locale_name = report_name</code>。<br/><br/> 示例：<br/><code>en = Book</code><br/><code>ru = Книга</code>
parameter.transformationScriptHelp=可以在報表使用之前對參數應用一個Groovy腳本。<br/>Groovy腳本應當返回新參數值。當前參數值可以在腳本<br/>中通過 <code>paramValue</code> 獲得，參數映射使用<code>params</code>別名。<br/><br/>示例：<br/><code>return "%" + paramValue + "%"</code>
parameterEditor=參數編輯器
parameters.alias=參數別名
parameters.aliasMsg=參數別名未指定
parameters.caption=標題
parameters.crossFieldValidate=驗證
parameters.defaultDateIsCurrent=默認日期（時間）\n 是用當前日期時間
parameters.defaultValue=默認值
parameters.enum=枚舉
parameters.groovyScript=Groovy腳本
parameters.hidden=隱藏
parameters.localesTab=本地化
parameters.metaClass=實體
parameters.nameMsg=參數名稱未指定
parameters.optionsTab=屬性
parameters.predefinedTransformation=預定義轉換
parameters.required=必填參數？
parameters.requiredEnumClass=參數枚舉未指定
parameters.requiredMetaClass=參數實體未指定
parameters.screen=實體選擇界面
parameters.transformationTab=轉換
parameters.type=參數類型
parameters.typeMsg=參數類型未指定
parameters.validateFields=驗證
parameters.validationTab=驗證
parameters.wildcards=通配符
parametersAndFormatsTab=參數和格式
pivotTable.aggregationFunctionHelp=可使用JavaScript函數作爲自定義的聚合函數。<br/>此函數應在透視表中每個單元格進行調用<br/>並返回帶有以下鍵值的對象：<ul><li><code>push</code> - 以記錄作爲輸入參數的函數，每條記錄調用一次</li><li><code>value</code> - 返回單元格存儲值的函數</li><li><code>format</code> - 接收字符串輸入並返回其格式化結果的函數</li></ul>這裏有個聚合函數的示例 <code>count</code> 返回跟單元格匹配的記錄<br/><br/><code>function(data, rowKey, colKey) {<br/>&nbsp &nbsp return {<br/>&nbsp &nbsp &nbsp &nbsp count: 0,<br/>&nbsp &nbsp &nbsp &nbsp push: function(record) { this.count++; },<br/>&nbsp &nbsp &nbsp &nbsp value: function() { return this.count; },<br/>&nbsp &nbsp &nbsp &nbsp format: function(x) { return x; },<br/>&nbsp &nbsp};<br/>}</code>
pivotTable.aggregationOptions=聚合選項
pivotTable.customC3properties=自定義C3參數
pivotTable.customFunctions=自定義函數
pivotTable.customHeatmapProperties=自定義熱力圖屬性
pivotTable.customOptions=自定義選項
pivotTable.defaultAggregation=默認聚合
pivotTable.functionHelpCaption=腳本
pivotTable.propertiesOptions=參數選項
pivotTable.propertyFunctionHelp=JavaScript 函數可以用來爲透視表添加從現有屬性派生的新屬性。<br/>這樣可以使得數據更容易做透視觀察。<br/>方法輸入是已有的記錄，返回的是新屬性的值。<br/><br/>這裏有一個非常簡單的示例，使用已有的<code>Age</code> 屬性返回其所處年代：<br/><br/><code>function(record) {<br/>&nbsp &nbsp return record.Age - record.Age % 10;<br/>}</code>
pivotTable.rendererOptions=渲染器選項
pivotTableAggregationEditor=聚合選項編輯器
pivotTableEdit.aggregationPropertiesRequired=請指定聚合屬性
pivotTableEdit.aggregationsRequired=請指定聚合
pivotTableEdit.bandRequired=區域必填
pivotTableEdit.columnsOrRowsRequired=請指定列或者行
pivotTableEdit.propertiesRequired=請指定屬性
pivotTableEdit.propertyIntersection=屬性不能相交
pivotTableEdit.rendererRequired=請指定默認渲染器
pivotTableEdit.uniqueAggregationOptionCaption=聚合選項標題必須唯一
pivotTablePropertyEditor=屬性選項編輯器
report.bandDetails=區域詳情
report.bands=報表區域
report.crossParametersValidation=參數交叉驗證
report.defaultTemplate=設置默認
report.localeTextHelp=這裏可以本地化報表名稱 - 在報表列表中以不同用戶的語言顯示名稱<br/> 單獨的行內成對輸入區域名稱： <code>locale_name = report_name</code><br/><br/> 示例：<br/><code>en = Books by author</code><br/><code>ru = Книги по автору</code>
report.nameMsg=報表名稱未指定
report.new=新建
report.parameters=參數
report.reportClearButton=清除
report.reportFilterButton=搜索
report.reportRunFilterCode=代碼
report.reportRunFilterGroup=分組
report.reportRunFilterName=名稱
report.reportRunFilterUpdatedDate=更新時間
report.reportTypeMsg=報表類型未指定
report.templateMsg=默認模板未指定
report.templates=模板
report.validationScriptOff=驗證腳本
report.validationScriptOn=驗證腳本啓用
report.valuesFormats=值格式
report.wizard=使用嚮導
reportBrowser=報表
reportEditor=報表編輯器
reportEditor.format=編輯報表 "%s"
reportException.failedConnectToOffice=未找到LibreOffice實例
reportException.message=生成報表時產生錯誤
reportException.noFile=文件未上傳
reportException.noOpenOfficeFreePorts=不能連接到LibreOffice實例。沒有可用的端口。
reportException.unableToImportReport=不能導入報表
reportException.wrongFileType=錯誤的文件類型：%s。期望是ZIP。
reportGroupBrowser=報表分組
reportGroupEditor=報表組
roles.addRole=添加角色
roles.removeRole=移除角色
roles.roleName=角色名稱
runReport=運行
runReportBackgroundMessage=報表文檔生成中，請等待
runReportBackgroundTitle=正在運行報表
screens.createScreen=添加界面
screens.removeScreen=移除界面
screens.screenId=界面ID
scriptEditor=編輯器
securityFrame.roles=角色
securityFrame.screens=界面
securityTab=角色和界面
template.alterable=可變
template.code=模板代碼
template.codeMsg=請指定模板代碼
template.copyNamingPattern=%s 複製
template.customDefinedBy=定義人
template.customDefinition=定義定製化
template.file=模板文件
template.isAlterableOutput=是否可變輸出
template.isCustom=是否自定義
template.outputNamePattern=輸出名稱模式
template.outputType=輸出類型
template.outputTypeMsg=請指定輸出類型
template.uploadTemplate=請上傳模板文件
templateEditor=模板編輯器
templateEditor.HighlightActiveLine=高亮活躍行
templateEditor.PrintMargin=打印邊距
templateEditor.ShowGutter=顯示邊槽
templateEditor.classRequired=請指定定製化的定義
templateEditor.clearTemplateMessage=模板文字會在保存時刪除
templateEditor.customDefinedBy=請指定定製化定義類型
templateEditor.uploadSuccess=文件已上傳
templateEditor.uploadUnsuccess=文件未上傳
templateEditor.warning=警告
templatesTab=模板
transformationScript=轉換
unableToDeleteNotEmptyReportGroup=不能刪除帶有報表的分組
unableToDeleteSystemReportGroup=不能刪除系統報表分組
unableToSaveTemplateWhichDefinedWithClass=不能保存採用類定義的模板
validationScript=驗證腳本
validationScriptHelp=這裏可以設置一個Groovy腳本，用來檢查報表參數值。<br/> <code>invalid (String str)</ code> 方法可以給用戶發送關於驗證的錯誤信息。<br/> 腳本應當檢查參數值，如果參數值無效則調用 "invalid()" 方法。<br/><br/> 比如，<code>invalid('參數錯誤')</code> 會在報表執行時有無效參數的時候發出錯誤消息。<br/>以下變量傳遞到腳本中：<ul><li><code>value</code> - 用戶輸入的參數值</li><li><code>dataManager</code> - <code>DataManager</code> 類型的對象，提供CRUD功能。</li><li><code>metadata</code> - <code>Metadata</code> 類型的對象，提供訪問應用程序元數據的功能。</li><li><code>security</code> - <code>Security</code> 類型的對象，用來檢查用戶訪問不同系統對象的權限</li><li><code>userSession</code> - <code>UserSession</code> 類型的對象，關聯當前認證用戶</li><li><code>invalid</code> - groovy 閉包，如果在腳本內調用的話，能很有效的檢測驗證失敗。<ul>
valueNameMsg=值名稱沒指定
valuesFormats.format=格式字符串
valuesFormats.name=值名稱
com.haulmont.reports.gui.report.importdialog/importResult=導入成功完成。創建報表 %s，更新 %s
com.haulmont.reports.gui.report.importdialog/importRoles=導入角色
com.haulmont.reports.gui.report.importdialog/reportImportDialog.caption=導入報表
com.haulmont.reports.gui.report.importdialog/uploadDescription=選擇文件或者拖動到這裏
com.haulmont.reports.gui.report.run/caption.reportForChart=帶圖表的報表
com.haulmont.reports.gui.report.run/caption.reportForPivotTable=透視表的報表
com.haulmont.reports.gui.report.run/caption.reportForTable=帶表格的報表
com.haulmont.reports.gui.report.run/caption.reportOutputType=輸出類型
com.haulmont.reports.gui.report.run/caption.reportParameters=報表參數
com.haulmont.reports.gui.report.run/caption.reportTemplate=模板
com.haulmont.reports.gui.report.run/error.paramIsRequiredButEmpty=填寫參數 "%s"
com.haulmont.reports.gui.report.run/input.printReport=運行報表
com.haulmont.reports.gui.report.run/input.requiredParametersNotSet=必要參數未定義
com.haulmont.reports.gui.report.run/inputParameters=輸入參數
com.haulmont.reports.gui.report.run/name=名稱
com.haulmont.reports.gui.report.run/reportBrowser=運行報表
com.haulmont.reports.gui.report.run/runReport=運行
com.haulmont.reports.gui.report.run/showChart.caption=報表圖表
com.haulmont.reports.gui.report.run/showPivotTable.caption=透視表
com.haulmont.reports.gui.report.run/showReportTable.caption=顯示報表表格
com.haulmont.reports.gui.report.validators/fillCorrectOutputFileNameMsg=請輸入正確的文件擴展名 "%s"
com.haulmont.reports.gui.report.validators/incorrectBandName=區域名稱只能包含字母，數字和下劃線
com.haulmont.reports.gui.report.validators/incorrectInputData=參數 "%s" 無效
com.haulmont.reports.gui.report.validators/incorrectParamAlias=別名只能包含字母，數字和下劃線
com.haulmont.reports.gui.report.validators/notOnlyUnderscore=別名不能只是下劃線
com.haulmont.reports.gui.report.wizard/add=添加
com.haulmont.reports.gui.report.wizard/addPropertiesAndTableAreas=爲報表添加簡單或者表格
com.haulmont.reports.gui.report.wizard/addRegion=添加區域
com.haulmont.reports.gui.report.wizard/addRegionsWarn=至少爲報表添加一個區域
com.haulmont.reports.gui.report.wizard/attributes=屬性
com.haulmont.reports.gui.report.wizard/backward=後退
com.haulmont.reports.gui.report.wizard/cancel=取消
com.haulmont.reports.gui.report.wizard/changeQuery=修改查詢語句
com.haulmont.reports.gui.report.wizard/confirmSaveWithoutRegions=報表沒有任何區域。確認保存？
com.haulmont.reports.gui.report.wizard/defaultQueryHasBeenSet=設置了未帶條件的查詢語句（選擇所有實體）
com.haulmont.reports.gui.report.wizard/deleteRegion=刪除區域 %s?
com.haulmont.reports.gui.report.wizard/diagramType=圖表類型
com.haulmont.reports.gui.report.wizard/downloadOutputFileNamePattern="%s".%s 實體的報表
com.haulmont.reports.gui.report.wizard/downloadTemplateFile=模板
com.haulmont.reports.gui.report.wizard/downloadTemplateFileNamePattern=報表 "%s".%s 的模板
com.haulmont.reports.gui.report.wizard/elementsAlreadyAdded=屬性已添加
com.haulmont.reports.gui.report.wizard/elementsWasNotAdded=屬性未添加...
com.haulmont.reports.gui.report.wizard/enterMainParameters=輸入主參數
com.haulmont.reports.gui.report.wizard/entity=實體
com.haulmont.reports.gui.report.wizard/entityHintMsg=報表接收的對象類型
com.haulmont.reports.gui.report.wizard/fillEntityMsg=請選擇 "實體"
com.haulmont.reports.gui.report.wizard/fillReportNameMsg=請輸入 "報表名稱"
com.haulmont.reports.gui.report.wizard/fillReportQuery=請設置報表查詢語句
com.haulmont.reports.gui.report.wizard/fillTemplateTypeMsg=請選擇 "模板文件格式"
com.haulmont.reports.gui.report.wizard/finishPrepareReport=完成後可在"報表"界面看到此報表
com.haulmont.reports.gui.report.wizard/forward=下一步
com.haulmont.reports.gui.report.wizard/interruptConfirm=確定要中斷並放棄未保存的更改？
com.haulmont.reports.gui.report.wizard/listOfEntitiesReport=實體列表報表
com.haulmont.reports.gui.report.wizard/listOfEntitiesReportWithQuery=查詢語句選擇實體列表報表
com.haulmont.reports.gui.report.wizard/multiEntityDataSetViewEditor=爲數據集選擇屬性
com.haulmont.reports.gui.report.wizard/outputFileFormat=報表輸出類型
com.haulmont.reports.gui.report.wizard/outputFileName=輸出名稱模式
com.haulmont.reports.gui.report.wizard/outputFileNameHintMsg=報表生成的文件默認名稱
com.haulmont.reports.gui.report.wizard/outputFileTypeHintMsg=報表生成文件的類型
com.haulmont.reports.gui.report.wizard/properties=已選屬性
com.haulmont.reports.gui.report.wizard/region=區域
com.haulmont.reports.gui.report.wizard/regionEditor=爲報表區域選擇屬性
com.haulmont.reports.gui.report.wizard/regionTabulatedMessage=報表表示帶有選擇屬性的 "%s" 實體列表
com.haulmont.reports.gui.report.wizard/regionsClearConfirm=報表區域將被清除。繼續？
com.haulmont.reports.gui.report.wizard/reportBuildType=報表類型
com.haulmont.reports.gui.report.wizard/reportDetails=報表創建
com.haulmont.reports.gui.report.wizard/reportName=報表名稱
com.haulmont.reports.gui.report.wizard/reportNameChanged=報表名稱已更改
com.haulmont.reports.gui.report.wizard/reportNamePattern=實體 "%s" 的報表
com.haulmont.reports.gui.report.wizard/reportRegions=報表創建
com.haulmont.reports.gui.report.wizard/reportRegionsColumn=報表區域
com.haulmont.reports.gui.report.wizard/runReport=運行
com.haulmont.reports.gui.report.wizard/save=保存
com.haulmont.reports.gui.report.wizard/saveReport=保存報表
com.haulmont.reports.gui.report.wizard/selectAtLeastOneProp=在右邊面板添加屬性以繼續
com.haulmont.reports.gui.report.wizard/selectEntityProperties=選擇 "%s" 屬性包含在報表內。<br>對於圖表和表格，第一個屬性的值會被用作標題，<br>其他屬性用來作爲數據。
com.haulmont.reports.gui.report.wizard/selectEntityPropertiesForTableArea=選擇 "%s" 屬性包含在表格區域。<br>對於圖表和表格，第一個屬性的值會被用作標題，<br>其他屬性用來作爲數據。
com.haulmont.reports.gui.report.wizard/selectItemForContinue=選擇一個條目繼續
com.haulmont.reports.gui.report.wizard/selectNotARoot=選擇子條目繼續
com.haulmont.reports.gui.report.wizard/selectPropertyFromEntity=從關聯實體選擇屬性
com.haulmont.reports.gui.report.wizard/setQuery=設置查詢語句
com.haulmont.reports.gui.report.wizard/simpleRegion=添加簡單區域
com.haulmont.reports.gui.report.wizard/simpleRegionEditor=爲簡單報表區域選擇屬性
com.haulmont.reports.gui.report.wizard/singleEntityDataSetViewEditor=爲數據集選擇屬性
com.haulmont.reports.gui.report.wizard/singleEntityReport=單一實體報表
com.haulmont.reports.gui.report.wizard/singleMultiEntityHintMsg=<b>單一實體報表</b><br/>可以從實體編輯界面或者實體瀏覽界面選擇一個實體打印實體報表。<br/><b>實體列表報表</b><br/>可以從實體瀏覽界面選擇一組實體打印實體列表報表。<br/><b>查詢語句選擇實體列表報表</b><br/>能打印預定義查詢語句選中的所有實體。
com.haulmont.reports.gui.report.wizard/stepNo=（第 %d/%d 步）
com.haulmont.reports.gui.report.wizard/tabulatedLookup=爲表格報表區域選擇屬性
com.haulmont.reports.gui.report.wizard/tabulatedRegion=添加表格區域
com.haulmont.reports.gui.report.wizard/tabulatedRegionEditor=爲表格報表區域選擇屬性
com.haulmont.reports.gui.report.wizard/templateFileFormat=模板類型
com.haulmont.reports.gui.report.wizard/templateGenerationException=生成模板出錯
com.haulmont.reports.gui.report.wizard/templateHintMsg=連接到自動生成的報表模板
com.haulmont.reports.gui.report.wizard/templateTypeHintMsg=報表模板類型
com.haulmont.reports.gui.report.wizard/valueNotFound=無查詢結果